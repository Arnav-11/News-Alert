# -*- coding: utf-8 -*-
"""Udemy_Project_Stock Trading News Alert.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cVlvoHXRdNW4rTycMDPz99VTtqQcU7xB
"""

import requests
from twilio.rest import Client

STOCK_NAME = "TSLA"
COMPANY_NAME = "Tesla Inc"

STOCK_ENDPOINT = "https://www.alphavantage.co/query"
NEWS_ENDPOINT = "https://newsapi.org/v2/everything"

Stock_API_Key = "RNGLI9IV8LJYZK1T"
News_API_Key = "362752b1fe724b0387c32a58b96773dc"
Twilio_SID = "AC44cf1a88b4a1bc684b58e60d5f5319cf"
Twilio_Auth_Token = "d7cf6e9acb46d63477527b5134609e62"

#TODO 1. - Get yesterday's closing stock price.
stock_params = {
    "function" : "TIME_SERIES_DAILY",
    "symbol" : STOCK_NAME,
    "apikey" : Stock_API_Key
}

response = requests.get(STOCK_ENDPOINT,params = stock_params)

data = response.json()["Time Series (Daily)"]

data_list = [value for (key,value) in data.items ()]

yesterday_data = data_list[0]
yesterday_closing_price = yesterday_data["4. close"]
print(yesterday_closing_price)

#TODO 2. - Get the day before yesterday's closing stock price
day_before_yesterday_data = data_list[1]
day_before_yesterday_closing_price = day_before_yesterday_data["4. close"]
print(day_before_yesterday_closing_price)



#TODO 3. - Find the positive difference
difference = abs(float(yesterday_closing_price) - float(day_before_yesterday_closing_price))

if yesterday_closing_price > day_before_yesterday_closing_price:
  print(difference,"ðŸ”º")
else:
  print(difference,"ðŸ”»")

#TODO 4. - Work out the percentage difference in price between closing price yesterday and closing price the day before yesterday.
diff_percentage = (difference / float(yesterday_closing_price))*100
print(diff_percentage,"% pecentage")


#TODO 5. - If TODO4 percentage is greater than 5 then print("Get News").
if diff_percentage > 5:
    print("Get News")
else:
    print("Nothing")

#TODO 6. - Instead of printing ("Get News"), use the News API to get articles related to the COMPANY_NAME.
if diff_percentage > 1:
  news_params = {
      "apiKey" : News_API_Key,
      "qInTitle" : COMPANY_NAME,
  }
  news_response = requests.get(NEWS_ENDPOINT,params = news_params)
  articles = news_response.json()["articles"]
  print(articles)


#TODO 7. - Use Python slice operator to create a list that contains the first 3 articles.
three_articles = articles[:3]
print(three_articles)

#to send a separate message with each article's title and description to your phone number.

#TODO 8. - Create a new list of the first 3 article's headline and description using list comprehension.
formatted_articles = [f"Headline: {article['title']}.\n Brief: {article['description']}"for article in three_articles]
print(formatted_articles)

#TODO 9. - Send each article as a separate message via Twilio.
Client = Client(Twilio_SID,Twilio_Auth_Token)

for article in formatted_articles:
                message = Client.messages.create(
                    body=article,
                    from_='+17622494135',
                    to='+919540033833'
                )